{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["Layout","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","Fragment","header","siteTitle","site","siteMetadata","title","style","margin","maxWidth","padding","paddingTop","_755544856","propTypes","PropTypes","node","isRequired","SEO","description","lang","meta","keywords","detailsQuery","metaDescription","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_1025518380","defaultProps","string","array","arrayOf","NotFoundPage","components_layout","seo"],"mappings":"6JAOMA,SAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,UAAWH,EAAKI,KAAKC,aAAaC,QAC1CZ,EAAAC,EAAAC,cAAA,OACEW,MAAO,CACLC,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPC,WAAY,IAGblB,KArBTO,KAAAY,MA4BFrB,EAAOsB,UAAY,CACjBpB,SAAUqB,IAAUC,KAAKC,YAGZzB,mCCnCf,SAAS0B,EAATzB,GAA2D,IAA5C0B,EAA4C1B,EAA5C0B,YAAaC,EAA+B3B,EAA/B2B,KAAMC,EAAyB5B,EAAzB4B,KAAMC,EAAmB7B,EAAnB6B,SAAUf,EAASd,EAATc,MAChD,OACEZ,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAOwB,EACPvB,OAAQ,SAAAC,GACN,IAAMuB,EACJL,GAAelB,EAAKI,KAAKC,aAAaa,YACxC,OACExB,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CACE8B,eAAgB,CACdN,QAEFb,MAAOA,EACPoB,cAAa,QAAU1B,EAAKI,KAAKC,aAAaC,MAC9Cc,KAAM,CACJ,CACEO,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAAStB,GAEX,CACEuB,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS5B,EAAKI,KAAKC,aAAayB,QAElC,CACEH,KAAI,gBACJC,QAAStB,GAEX,CACEqB,KAAI,sBACJC,QAASL,IAGVQ,OACCV,EAASW,OAAS,EACd,CACEL,KAAI,WACJC,QAASP,EAASY,KAAT,OAEX,IAELF,OAAOX,MAtDlBpB,KAAAkC,IA8DJjB,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAIJ,UAAY,CACdK,YAAaJ,IAAUsB,OACvBjB,KAAML,IAAUsB,OAChBhB,KAAMN,IAAUuB,MAChBhB,SAAUP,IAAUwB,QAAQxB,IAAUsB,QACtC9B,MAAOQ,IAAUsB,OAAOpB,YAGXC,QAETK,EAAY,aCzEHiB,UARM,kBACnB7C,EAAAC,EAAAC,cAAC4C,EAAD,KACE9C,EAAAC,EAAAC,cAAC6C,EAAD,CAAKnC,MAAM,mBACXZ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA","file":"component---src-pages-404-js-921977dcdec6f22180c6.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n"],"sourceRoot":""}